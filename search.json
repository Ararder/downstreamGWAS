[{"path":"http://arvidharder.com/downstreamGWAS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 downstreamGWAS authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"downstreamGWAS","text":"downstreamGWAS ambition make standardized pipelines downstream analysis genome-wide summary statistics primary input. Examples types analysis : gene-based tests (magma GCTA), heritability enrichment (S-LDSC). required input analyses can typically put one three categories: summary statistics reference data software dependencies downstreamGWAS aimed making painless reproducible. part tackled following way:","code":"library(downstreamGWAS) library(fs) library(tidyGWAS)"},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"summary-statistics","dir":"Articles","previous_headings":"Introduction","what":"(1) Summary statistics","title":"downstreamGWAS","text":"downstreamGWAS relies summary statistics first cleaned tidyGWAS::tidyGWAS(), assumes output_format=\"hivestyle\" (default argument), changes made resulting folder structure. standardized column names data formats, functionality prepare summary statistics downstream analysis can continously reused. example, GCTB suite genetic analysis uses .ma format, downstreamGWAS defined method converting tidyGWAS .ma downstreamGWAS::to_ma(). need write new code time! common (time consuming step) first munge summary statistics, prepare correct filters, column names data-types. downstreamGWAS uses standardized tidyGWAS output automate munging step, example downstreamGWAS::to_ma() downstreamGWAS::to_ldsc().","code":""},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"reference-data","dir":"Articles","previous_headings":"Introduction","what":"(2) Reference data","title":"downstreamGWAS","text":"Another common issue acquiring using reference data analysis. downstreamGWAS uses Zenodo host share reference data possible. makes easy reproduce results across computational clusters research groups. See example reference files running stratified LDscore regression .","code":""},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"software-dependencies","dir":"Articles","previous_headings":"Introduction","what":"(3) Software dependencies","title":"downstreamGWAS","text":"Software can difficult install properly, especially working high performance clusters might enough permissions. handle , downstreamGWAS makes use software container apptainer. Apptainer can use Docker images produce virtual environment, sudo privileges required. downstream analysis implemented downstreamGWAS, created docker images . virtualization also serves another important factor reproductibility, making sure analysis conducted using underlying software.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"setting-up-downstreamgwas","dir":"Articles","previous_headings":"Introduction","what":"Setting up downstreamGWAS","title":"downstreamGWAS","text":"illustrate results, first create toy example cleaned tidyGWAS sumstat. Using filepath output_folder, downstreamGWAS can generate slurm script run specific downstream analysis. example, script run SbayesRC created, ready run.","code":"sumstats <- tidyGWAS::test_file outdir <- tempdir() cleaned <- tidyGWAS(   # Here we input the summary statistics as a data.frame already in R memory   tbl = sumstats,    # provide the filepath to the refence files you downloaded.   dbsnp_path = path(fs::path_package(\"tidyGWAS\"), \"extdata/dbSNP155\"),   output_dir = path(outdir, \"example_gwas\")   ) #>  #> ── Running tidyGWAS 0.8.0 ────────────────────────────────────────────────────── #> Starting at 2024-05-16 11:22:49.297418 #> with 100000 rows in input data.frame #> ℹ Saving output in folder: /tmp/Rtmprq63qm/example_gwas #>  #>  #>  #> ── Checking that columns follow tidyGWAS format  #>  #> ✔ The following columns are used for further steps: CHR, POS, RSID, EffectAllele, OtherAllele, B, SE, EAF, INFO, P, CaseN, ControlN, and rowid #>  #>  #>  #> ── Checking for columns with all NA  #>  #> ✔ Found no columns with all NA #>  #>  #>  #> ── 1) Scanning for rows with NA ── #>  #>  #>  #> ✔ No rows contained missing values #>  #>  #>  #> ── 2) Scanning for rows with duplications ── #>  #>  #>  #> ℹ A unique ID is formed by concontenating CHR, POS, EffectAllele, and OtherAllele #>  #> ✔ Found no duplications #>  #>  #>  #> ── 3) Scanning for indels ── #>  #>  #>  #> 1. EffectAllele or OtherAllele, character length > 1: A vs AA #>  #> 2. EffectAllele or OtherAllele coded as 'D', 'I', or 'R' #>  #> ✔ Detected 0 rows as indels #>  #>  #>  #> ── 4a) Validating columns  #>  #> ℹ The median value of B is -0.0012, which seems reasonable #>  #>  #>  #> ── All rows passed validation  #>  #>  #>  #> ── 5) Adding RSID based on CHR:POS. Adding dbSNP based QC flags  #>  #> ℹ Inferring build by matching 10000 rows to GRCh37 and GRCh38 #>  #> 3437 snps matched GRCh38, 9998 for GRCh37, inferring build to be 37 #> ! Removed 11 rows with no dbSNP entry #>  #> /tmp/Rtmprq63qm/example_gwas/pipeline_info/removed_nodbsnp.parquet #> ! Removed 486 rows with missing on either build #>  #> /tmp/Rtmprq63qm/example_gwas/pipeline_info/removed_missing_on_either_build.parquet #>  #>  #> ── 6) Repairing missings statistics columns if possible ── #>  #>  #>  #> ℹ Z missing: Calculating Z using the formula:  Z = B / SE #>  #>  #>  #> ── Finished repair_stats:   #>  #> ℹ Added 1 new columns: Z #>  #>  #>  #> ── Listing final breakdown of removed rows:   #>  #> missing_on_either_build: 486 #>  #> nodbsnp: 11 #>  #>  #>  #> ── Finished tidyGWAS ─────────────────────────────────────────────────────────── #>  #> ℹ A total of 497 rows were removed #>  #> ℹ Total running time: 4.7s #>  #> Saving metadata from analysis to /tmp/Rtmprq63qm/example_gwas/metadata.yaml"},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"running-sbayesrc","dir":"Articles","previous_headings":"Introduction > Setting up downstreamGWAS","what":"Running SbayesRC","title":"downstreamGWAS","text":"","code":"# downstreamGWAS uses the \"HOME\" variable to store data on where you keep the reference files between sessions.  withr::local_envvar(list(\"HOME\" = tempdir())) dsg_folder <- fs::path(tempdir(), \"downstreamGWAS_folder\") # use setup to tell downstreamGWAS where the reference data and containers are kept # only has to be done once setup(dsg_folder) #> ✔ Wrote the downstreamGWAS config file to /tmp/Rtmprq63qm/.config/downstreamGWAS/config.yml #> ℹ Using /tmp/Rtmprq63qm/downstreamGWAS_folder to store downstreamGWAS data #> ℹ Reference data required for downstreamGWAS should be stored in /tmp/Rtmprq63qm/downstreamGWAS_folder/reference #> ℹ Containers required for downstreamGWAS should be stored in /tmp/Rtmprq63qm/downstreamGWAS_folder/containers run_sbayesrc(fs::path(outdir, \"example_gwas\"),  write_script = FALSE) #>  [1] \"#!/bin/bash\"                                                                                                                                     #>  [2] \"#SBATCH --mem=8gb\"                                                                                                                               #>  [3] \"#SBATCH --time=24:00:00\"                                                                                                                         #>  [4] \"#SBATCH --output=/tmp/Rtmprq63qm/example_gwas/analysis/sbayesrc/slurm-%j.out\"                                                                    #>  [5] \"\"                                                                                                                                                #>  [6] \"\\n\"                                                                                                                                              #>  [7] \"R -e \\\"downstreamGWAS::to_ma('/tmp/Rtmprq63qm/example_gwas')\\\"\"                                                                                  #>  [8] \"\\n\"                                                                                                                                              #>  [9] \"\"                                                                                                                                                #> [10] \"workdir='/tmp/Rtmprq63qm/example_gwas/analysis/sbayesrc:/mnt'\"                                                                                   #> [11] \"reference_dir='/tmp/Rtmprq63qm/downstreamGWAS_folder/reference:/src'\"                                                                            #> [12] \"container='/tmp/Rtmprq63qm/downstreamGWAS_folder/containers/sbayesrc_latest.sif'\"                                                                #> [13] \"code=\\\"SBayesRC::tidy('/mnt/sumstats.ma',LDdir='/src/gctb/ukbEUR_Imputed',output='/mnt/sumstats.ma')\\\"\"                                          #> [14] \"apptainer exec --cleanenv --bind $workdir,$reference_dir $container R -e \\\"$code\\\"\"                                                              #> [15] \"\\n\"                                                                                                                                              #> [16] \"code=\\\"SBayesRC::impute('/mnt/sumstats.ma',LDdir='/src/gctb/ukbEUR_Imputed',output='/mnt/sumstats.ma')\\\"\"                                        #> [17] \"apptainer exec --cleanenv --env 'OMP_NUM_THREADS=4' --bind $workdir,$reference_dir $container R -e \\\"$code\\\"\"                                    #> [18] \"\\n\"                                                                                                                                              #> [19] \"code=\\\"SBayesRC::sbayesrc('/mnt/sumstats.ma',LDdir='/src/gctb/ukbEUR_Imputed',outPrefix='/mnt/sbrc', annot='/src/gctb/annot_baseline2.2.txt')\\\"\" #> [20] \"apptainer exec --cleanenv --env 'OMP_NUM_THREADS=8' --bind $workdir,$reference_dir $container R -e \\\"$code\\\"\"                                    #> [21] \"\\n\"                                                                                                                                              #> [22] \"rm /tmp/Rtmprq63qm/example_gwas/analysis/sbayesrc/*.rds\"                                                                                         #> [23] \"rm /tmp/Rtmprq63qm/example_gwas/analysis/sbayesrc/sumstats.ma*\"                                                                                  #> [24] \"rm /tmp/Rtmprq63qm/example_gwas/analysis/sbayesrc/sbrc_tune_inter.txt*\"                                                                          #> [25] \"gzip /tmp/Rtmprq63qm/example_gwas/analysis/sbayesrc/sbrc.txt\""},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"cell-type-analysis-using-s-ldsc","dir":"Articles","previous_headings":"Introduction > Setting up downstreamGWAS","what":"cell-type analysis using S-LDSC","title":"downstreamGWAS","text":"","code":"run_sldsc_cts(fs::path(outdir, \"example_gwas\"),cts_file = \"toy.cts\", write_script = FALSE) #>  [1] \"#!/bin/bash\"                                                                                                                                                                                                                                                                                                                            #>  [2] \"#SBATCH --mem=8gb\"                                                                                                                                                                                                                                                                                                                      #>  [3] \"#SBATCH --time=24:00:00\"                                                                                                                                                                                                                                                                                                                #>  [4] \"#SBATCH --output=/tmp/Rtmprq63qm/example_gwas/analysis/ldsc/sldsc/slurm-%j.outworkdir='/tmp/Rtmprq63qm/example_gwas/analysis/ldsc:/mnt'\"                                                                                                                                                                                                                                                                              #>  [7] \"reference_dir='/tmp/Rtmprq63qm/downstreamGWAS_folder/reference:/src'\"                                                                                                                                                                                                                                                                   #>  [8] \"container='/tmp/Rtmprq63qm/downstreamGWAS_folder/containers/ldsc_latest.sif'\"                                                                                                                                                                                                                                                           #>  [9] \"code='python /tools/ldsc/ldsc.py --h2-cts /mnt/ldsc.sumstats.gz --ref-ld-chr /src/sldsc_ref/1000G_EUR_Phase3_baseline/baseline. --ref-ld-chr-cts /src/toy.cts --w-ld-chr /src/sldsc_ref/1000G_Phase3_weights_hm3_no_MHC/weights.hm3_noMHC. --overlap-annot --frqfile-chr /src/sldsc_ref/1000G_Phase3_frq/1000G.EUR.QC. --out /mnt/toy'\" #> [10] \"apptainer exec --cleanenv --bind $workdir,$reference_dir $container $code\""},{"path":"http://arvidharder.com/downstreamGWAS/articles/downstreamGWAS.html","id":"setting-up-downstreamgwas-1","dir":"Articles","previous_headings":"","what":"Setting up downstreamGWAS","title":"downstreamGWAS","text":"WORK PROGRESS","code":""},{"path":"http://arvidharder.com/downstreamGWAS/articles/meta-analysis.html","id":"meta-analysis","dir":"Articles","previous_headings":"","what":"Meta-analysis","title":"meta-analysis","text":"downstreamGWAS implemented inverse-variance-weighted fixed-effects meta-analysis equal “StdErr” metal. Sample-size weighted meta-analysis yet implemented, planned feature. illustrate downstreamGWAS::meta_analyze() function, utilize summary statistics repository local HPC cluster (128 summary statistics). summary statistic cleaned can combined multi-dataset creating symlink tidyGWAS_hivestyle folder summary statistic. format looks like.","code":"multi_dataset <- function(dir, new_dir) {   symlink <- dplyr::tibble(     basedir = fs::dir_ls(dir),     old_path = fs::path(basedir, \"tidyGWAS_hivestyle\"),     dataset_name = fs::path_file(basedir),     new_path = fs::path(new_dir, paste0(\"dataset_name=\", dataset_name))   ) |>      dplyr::select(old_path, new_path)      fs::link_create(symlink$old_path, symlink$new_path) } fs::dir_create(\"/work/users/a/r/arvhar/multi_dataset\") multi_dataset(\"/work/users/a/r/arvhar/tidyGWAS_stuff/output2\", \"/work/users/a/r/arvhar/multi_dataset\")  dir_ls(\"/work/users/a/r/arvhar/multi_dataset\") |>    head()"},{"path":"http://arvidharder.com/downstreamGWAS/articles/meta-analysis.html","id":"working-with-a-multi-dataset","dir":"Articles","previous_headings":"Meta-analysis","what":"Working with a multi-dataset","title":"meta-analysis","text":"’s useful read arrow interacts dplyr next part. can open multi-dataset arrow::open_dataset(). can use standard dplyr commands like dplyr::filter() dplyr::select(). example, let’s meta-analyze three waves schizophrenia GWASes (Even though nonsensical). Meta-analyzing three summary statistics took 70 seconds, meta-analyzing 76 summary statistics took ~15 minutes compute cluster 3 cores 25gb memory. CaseN, ControlN INFO kept exist input summary statistics.","code":"ds <- arrow::open_dataset(\"/work/users/a/r/arvhar/multi_dataset\")  sumstats <- ds |>    dplyr::filter(dataset_name %in% c(\"scz2014\",\"scz2018_clozuk\", \"scz2022\")) tic(\"Meta-analyze three traits for chromosome 1\") res <- ds |>    dplyr::filter(dataset_name %in% c(\"scz2014\",\"scz2018_clozuk\", \"scz2022\")) |>    downstreamGWAS::meta_analyze(by = c(\"CHR\", \"POS\", \"EffectAllele\",\"OtherAllele\", \"RSID\")) toc()"},{"path":"http://arvidharder.com/downstreamGWAS/articles/multi-file-datasets.html","id":"combining-cleaned-summary-statistics","dir":"Articles","previous_headings":"","what":"Combining cleaned summary statistics","title":"multi-file datasets","text":"Let’s pretend cleaned 3 different summary statistics. seems natural put place, whenever want work summary statistics, can ones already cleaned. cleaned_GWAS` folder, now three folders corresponding three traits. cleaned summary statistics divided chromosome. turn useful apply hivestyle partition - level traits. recommended method use symbolic links create next level mapping. way cleaning separated. creating symbolic links trait name hivestyle format, ’ve created multi-file dataset level traits. Queries can now built across multiple summary statistics using normal dplyr syntax. Without calling dplyr::collect(), query executed. Rather, planned query displayed. complex queries can built: example, querying specific region can extremely fast. Across test collection 241 summary statistics, command took ~8 seconds using just 2 cores. beautiful thing seamless integration dplyr. types queries can written normal dplyr code, transformed highly efficient arrow c++ code. work just single trait, just traits. Tip: can take lot time read 20 columns. Since parquet files stored columnar storage, overhead reading subset columns","code":"dir_tree(gwas_repository, recurse = 1) dir_tree(fs::path(gwas_repository, \"trait3\", \"tidyGWAS_hivestyle\")) symlinks <- path(tempdir(), \"arrow_traits\")  # identify the filepath to all cleaned summary statistics sumstats_path <- dir_ls(gwas_repository, glob = \"*tidyGWAS_hivestyle\", recurse = 1)  # for each sumstat, we can get the trait name by considering the parent directory name names <- path_file(path_dir(sumstats_path)) symlinked_path <- path(symlinks, paste0(\"dataset_name=\", names))  # create the directory where we create the symbolic links dir_create(symlinks) link_create(sumstats_path, symlinked_path)  dir_tree(symlinks) ds <- arrow::open_dataset(symlinks) ds ds |>    dplyr::filter(P < 5e-08) ds |>    filter(P < 5e-08) |>    collect() |>    summarise(n = n()) ds |>    # group by each summary statistic   group_by(dataset_name, CHR) |>    filter(P < 5e-08) |>    summarise(n_sig_variants_per_trait = n()) |>    collect() |>    head() all_sig <- ds |>    # CHR 7 POS >= 1788081 & POS <= 2289862 is one of the top significant loci   # in schizophrenia.   dplyr::filter(CHR == \"7\") |>    dplyr::filter(POS >= 1788081 & POS <= 2289862) |>    dplyr::filter(P < 5e-08) |>    dplyr::select(RSID, P, B, SE, dataset_name) |>    dplyr::collect() sumstats <- ds |>    filter(dataset_name %in% c(\"trait1\", \"trait2\")) |>    # addin this line will is much quicker to read in the data to memory   select(dataset_name, RSID, EffectAllele, OtherAlllele, EAF, B, SE, P, N) |>    collect()"},{"path":"http://arvidharder.com/downstreamGWAS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harder (2024). downstreamGWAS: Standardized downstream pipelines GWAS. R package version 0.2.0, http://arvidharder.com/downstreamGWAS/.","code":"@Manual{,   title = {downstreamGWAS: Standardized downstream pipelines for GWAS},   author = {Arvid Harder},   year = {2024},   note = {R package version 0.2.0},   url = {http://arvidharder.com/downstreamGWAS/}, }"},{"path":"http://arvidharder.com/downstreamGWAS/index.html","id":"downstreamgwas","dir":"","previous_headings":"","what":"Standardized downstream pipelines for GWAS","title":"Standardized downstream pipelines for GWAS","text":"downstreamGWAS companion package tidyGWAS. downstreamGWAS provides functions run standardize genetic pipelines using summary statistics input. External software packaged docker files available dockerhub. addition , reference files needed pipelines bundled containers available zenodo. Link TBD. DownstreamGWAS utilises three factors make genetic analysis much simplified: 1. Harmonized GWAS format tidyGWAS 2. External software packaged docker images, can run HPCs singularity/apptainer 3. References files collected available download, harmonized filepaths","code":""},{"path":"http://arvidharder.com/downstreamGWAS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Standardized downstream pipelines for GWAS","text":"downstreamGWAS requires filepaths.yml file created, add information . ```{r} dir_to_store_yaml_in = “/nas/depts/007/sullilab/shared/gwas_sumstats” setup_filepaths_yml(dir_to_store_yaml_in) # get script download singularity images sif_script() ```","code":"remotes::install_github(\"ararder/downstreamGWAS\") devtools::install_github(\"ararder/downstreamGWAS\")"},{"path":[]},{"path":"http://arvidharder.com/downstreamGWAS/reference/check_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the configuration file has been correctly set up — check_setup","title":"Check that the configuration file has been correctly set up — check_setup","text":"Check configuration file correctly set ","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/check_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the configuration file has been correctly set up — check_setup","text":"","code":"check_setup()"},{"path":"http://arvidharder.com/downstreamGWAS/reference/check_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that the configuration file has been correctly set up — check_setup","text":"text terminal","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/check_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that the configuration file has been correctly set up — check_setup","text":"","code":"if (FALSE) { check_setup() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/downstreamGWAS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"downstreamGWAS: Standardized downstream pipelines for GWAS — downstreamGWAS-package","title":"downstreamGWAS: Standardized downstream pipelines for GWAS — downstreamGWAS-package","text":"Standardized analysis genome-wide summary statistics.","code":""},{"path":[]},{"path":"http://arvidharder.com/downstreamGWAS/reference/effective_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate effective N — effective_n","title":"Calculate effective N — effective_n","text":"Calculate effective N","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/effective_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate effective N — effective_n","text":"","code":"effective_n(cases, controls)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/effective_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate effective N — effective_n","text":"cases Number cases controls Number controls","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/effective_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate effective N — effective_n","text":"numeric value","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/effective_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate effective N — effective_n","text":"","code":"effective_n(1000, 3000) #> [1] 3000"},{"path":"http://arvidharder.com/downstreamGWAS/reference/get_system_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Read downstreamGWAS filepaths from yaml file downstreamGWAS manages external filepaths through two files: — get_system_paths","title":"Read downstreamGWAS filepaths from yaml file downstreamGWAS manages external filepaths through two files: — get_system_paths","text":"param.yml file contains filepaths reference data software containers filepaths start reference/ containers/ respectively. param.yml file bundled downstreamGWAS package.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/get_system_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read downstreamGWAS filepaths from yaml file downstreamGWAS manages external filepaths through two files: — get_system_paths","text":"","code":"get_system_paths()"},{"path":"http://arvidharder.com/downstreamGWAS/reference/get_system_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read downstreamGWAS filepaths from yaml file downstreamGWAS manages external filepaths through two files: — get_system_paths","text":"nested list filepaths","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/get_system_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read downstreamGWAS filepaths from yaml file downstreamGWAS manages external filepaths through two files: — get_system_paths","text":"Secondly, config.yml file contains local configuaration paramerers, path downstreamGWAS data folder, call apptainer/singularity. config.yml file needs setup locally.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/get_system_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read downstreamGWAS filepaths from yaml file downstreamGWAS manages external filepaths through two files: — get_system_paths","text":"","code":"if (FALSE) { get_system_paths() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/irwl_ldsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Run LDscore regression --h2 flag. — irwl_ldsc","title":"Run LDscore regression --h2 flag. — irwl_ldsc","text":"Run LDscore regression --h2 flag.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/irwl_ldsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run LDscore regression --h2 flag. — irwl_ldsc","text":"","code":"irwl_ldsc(df, ld_size, step1_chi2 = 30, step2_chi2 = NULL, blocks = 200)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/irwl_ldsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run LDscore regression --h2 flag. — irwl_ldsc","text":"df data.frame containing three columns: c(\"Z\", \"N\", \"L2\") Z: Z score association per snp Z: sample size variant L2: LD score variant ld_size number variants used calculate LD score (Typically MAF > 0.05) step1_chi2 chi2 threshold step 1 filter step2_chi2 chi2 threshold step 2 filter: max(0.001 * max(ld_df$N), 80) blocks number blocks use jackknife regression. YET IMPLEMENTED","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/irwl_ldsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run LDscore regression --h2 flag. — irwl_ldsc","text":"dplyr::tibble() two columns: \"int\" \"obs_h2\"","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/irwl_ldsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run LDscore regression --h2 flag. — irwl_ldsc","text":"","code":"if (FALSE) { irwl_ldsc(df, ld_size = ld_size) }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/ldsc_rg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate genetic correlation between two GWAS using LDSC — ldsc_rg","title":"Estimate genetic correlation between two GWAS using LDSC — ldsc_rg","text":"Estimate genetic correlation two GWAS using LDSC","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/ldsc_rg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate genetic correlation between two GWAS using LDSC — ldsc_rg","text":"","code":"ldsc_rg(parent_folder, parent_folder2, outdir, workdir = tempdir())"},{"path":"http://arvidharder.com/downstreamGWAS/reference/ldsc_rg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate genetic correlation between two GWAS using LDSC — ldsc_rg","text":"parent_folder filepath tidyGWAS output parent_folder2 filepath tidyGWAS output outdir Folder save logfile workdir temporary working folder","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/ldsc_rg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate genetic correlation between two GWAS using LDSC — ldsc_rg","text":"code run slurm","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/ldsc_rg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate genetic correlation between two GWAS using LDSC — ldsc_rg","text":"","code":"if (FALSE) { ldsc_rg(\"my_sumstats/tidygwas/height2022\", \"my_sumstats/tidygwas/height2022\", \"~/\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/liability_scale_h2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an estiamte of observed-scale heritability to liability scale heritability — liability_scale_h2","title":"Convert an estiamte of observed-scale heritability to liability scale heritability — liability_scale_h2","text":"Convert estiamte observed-scale heritability liability scale heritability","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/liability_scale_h2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an estiamte of observed-scale heritability to liability scale heritability — liability_scale_h2","text":"","code":"liability_scale_h2(obs_h2, pop_prev, sample_prev = 0.5)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/liability_scale_h2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an estiamte of observed-scale heritability to liability scale heritability — liability_scale_h2","text":"obs_h2 observed-scale heritability pop_prev prevalence disorder general population sample_prev prevalence disorder sample. Default value 0.5, reflecting case-control study using effective N sample size","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/liability_scale_h2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an estiamte of observed-scale heritability to liability scale heritability — liability_scale_h2","text":"double","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/liability_scale_h2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an estiamte of observed-scale heritability to liability scale heritability — liability_scale_h2","text":"","code":"liability_scale_h2(0.25, 0.02) #> [1] 0.1638687"},{"path":"http://arvidharder.com/downstreamGWAS/reference/ls_sumstats.html","id":null,"dir":"Reference","previous_headings":"","what":"List the available sumstats — ls_sumstats","title":"List the available sumstats — ls_sumstats","text":"List available sumstats","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/ls_sumstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the available sumstats — ls_sumstats","text":"","code":"ls_sumstats(folder = NULL)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/ls_sumstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the available sumstats — ls_sumstats","text":"folder can used specify summary statistics . Default value NULL, sumstats_folder parameter used config.yaml file","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/ls_sumstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the available sumstats — ls_sumstats","text":"dplyr::tibble()","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/ls_sumstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the available sumstats — ls_sumstats","text":"","code":"if (FALSE) { ls_sumstats() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform meta-analysis of GWAS summary statistics datasets cleaned by tidyGWAS — meta_analyze","title":"Perform meta-analysis of GWAS summary statistics datasets cleaned by tidyGWAS — meta_analyze","text":"Perform meta-analysis GWAS summary statistics datasets cleaned tidyGWAS","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform meta-analysis of GWAS summary statistics datasets cleaned by tidyGWAS — meta_analyze","text":"","code":"meta_analyze(   dset,   by = c(\"CHR\", \"POS\", \"RSID\", \"EffectAllele\", \"OtherAllele\"),   method = c(\"ivw\") )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform meta-analysis of GWAS summary statistics datasets cleaned by tidyGWAS — meta_analyze","text":"dset arrow::open_dataset() object character vector column names group . Default c(\"CHR\", \"POS\", \"RSID\", \"EffectAllele\", \"OtherAllele\") Columns kept. group c(\"CHR\", \"POS\"), columns kept output. columns passed used define unique variant. example pass c(\"CHR\", \"POS\"), variants chromosome position considered variant. can use 'ID' speed meta analysis, RSID information lost. method method use performing meta-analysis. Currently, IVW (based standard errors) supported.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform meta-analysis of GWAS summary statistics datasets cleaned by tidyGWAS — meta_analyze","text":"dplyr::tibble()","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform meta-analysis of GWAS summary statistics datasets cleaned by tidyGWAS — meta_analyze","text":"","code":"if (FALSE) { dset <- arrow::open_dataset(\"path_to/sumstats/\") res <- meta_analyze(dset) }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze_by_chrom.html","id":null,"dir":"Reference","previous_headings":"","what":"meta_analyze summary statistics, one chromosome at a time! This function is exposed to allow for testing using real data — meta_analyze_by_chrom","title":"meta_analyze summary statistics, one chromosome at a time! This function is exposed to allow for testing using real data — meta_analyze_by_chrom","text":"meta_analyze summary statistics, one chromosome time! function exposed allow testing using real data","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze_by_chrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"meta_analyze summary statistics, one chromosome at a time! This function is exposed to allow for testing using real data — meta_analyze_by_chrom","text":"","code":"meta_analyze_by_chrom(dset, chrom, by)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze_by_chrom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"meta_analyze summary statistics, one chromosome at a time! This function is exposed to allow for testing using real data — meta_analyze_by_chrom","text":"dset arrow::open_dataset() object chrom chromosome use meta-analysis character vector column names group . Default c(\"CHR\", \"POS\", \"RSID\", \"EffectAllele\", \"OtherAllele\") Columns kept. group c(\"CHR\", \"POS\"), columns kept output. columns passed used define unique variant. example pass c(\"CHR\", \"POS\"), variants chromosome position considered variant. can use 'ID' speed meta analysis, RSID information lost.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze_by_chrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"meta_analyze summary statistics, one chromosome at a time! This function is exposed to allow for testing using real data — meta_analyze_by_chrom","text":"dplyr::tibble()","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/meta_analyze_by_chrom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"meta_analyze summary statistics, one chromosome at a time! This function is exposed to allow for testing using real data — meta_analyze_by_chrom","text":"","code":"if (FALSE) { meta_analyze_by_crom(dset, chrom = \"22\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"http://arvidharder.com/downstreamGWAS/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_gwas.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a tidyGWAS formatted summary statistics file — read_gwas","title":"Read in a tidyGWAS formatted summary statistics file — read_gwas","text":"Read tidyGWAS formatted summary statistics file","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_gwas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a tidyGWAS formatted summary statistics file — read_gwas","text":"","code":"read_gwas(parent_folder, columns)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_gwas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a tidyGWAS formatted summary statistics file — read_gwas","text":"parent_folder filepath parent_folder tidyGWAS_hivestyle columns character vector columns names, passed dplyr::select(dplyr::any_of(columns))","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_gwas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a tidyGWAS formatted summary statistics file — read_gwas","text":"data.frame()","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_gwas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in a tidyGWAS formatted summary statistics file — read_gwas","text":"","code":"if (FALSE) { read_gwas(\"/tidyGWAS_files/mdd2019\") # or if you have saved the summary statistics filepath in the config.yaml file # see [tidyGWAS_paths()] read_gwas(\"mdd2019\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_ldsc_h2.html","id":null,"dir":"Reference","previous_headings":"","what":"read the output of LDSC --h2 — read_ldsc_h2","title":"read the output of LDSC --h2 — read_ldsc_h2","text":"read output LDSC --h2","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_ldsc_h2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read the output of LDSC --h2 — read_ldsc_h2","text":"","code":"read_ldsc_h2(path)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_ldsc_h2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read the output of LDSC --h2 — read_ldsc_h2","text":"path log file","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_ldsc_h2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read the output of LDSC --h2 — read_ldsc_h2","text":"tibble","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/read_ldsc_h2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read the output of LDSC --h2 — read_ldsc_h2","text":"","code":"if (FALSE) { parse_ldsc_h2(\"ldsc_h2.log\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_ldsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Run munge LDSC and LDSC -h2 from tidyGWAS — run_ldsc","title":"Run munge LDSC and LDSC -h2 from tidyGWAS — run_ldsc","text":"Run munge LDSC LDSC -h2 tidyGWAS","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_ldsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run munge LDSC and LDSC -h2 from tidyGWAS — run_ldsc","text":"","code":"run_ldsc(parent_folder, ..., write_script = TRUE, use_effective_n = TRUE)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_ldsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run munge LDSC and LDSC -h2 from tidyGWAS — run_ldsc","text":"parent_folder Folder sumstats cleaned tidyGWAS. see tidyGWAS::tidyGWAS() output_folder ... Pass arguments slurm_header() write_script code written bash script? use_effective_n sample size computed effective_n formula CaseN ControlN present?","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_ldsc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run munge LDSC and LDSC -h2 from tidyGWAS — run_ldsc","text":"path slurm script","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_ldsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run munge LDSC and LDSC -h2 from tidyGWAS — run_ldsc","text":"","code":"if (FALSE) { script_location <- run_ldsc(\"my_sumstats/tidygwas/height2022\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayesrc.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sbayerc with tidyGWAS structure — run_sbayesrc","title":"Run sbayerc with tidyGWAS structure — run_sbayesrc","text":"Run sbayerc tidyGWAS structure","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayesrc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sbayerc with tidyGWAS structure — run_sbayesrc","text":"","code":"run_sbayesrc(   parent_folder,   ...,   write_script = TRUE,   thread_rc = 8,   thread_imp = 4 )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayesrc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sbayerc with tidyGWAS structure — run_sbayesrc","text":"parent_folder Folder sumstats cleaned tidyGWAS. see tidyGWAS::tidyGWAS() output_folder ... Pass arguments slurm_header() write_script code written bash script? thread_rc threads rescaling thread_imp threads imputing","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayesrc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sbayerc with tidyGWAS structure — run_sbayesrc","text":"filepath character vector","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayesrc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run sbayerc with tidyGWAS structure — run_sbayesrc","text":"","code":"if (FALSE) { run_sbayesrc() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Sbayes-S with tidyGWAS structure — run_sbayess","title":"Run Sbayes-S with tidyGWAS structure — run_sbayess","text":"Run Sbayes-S tidyGWAS structure","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Sbayes-S with tidyGWAS structure — run_sbayess","text":"","code":"run_sbayess(   parent_folder,   ...,   write_script = TRUE,   pi = \"0.01\",   hsq = \"0.5\",   num_chains = \"4\",   chain_length = \"25000\",   burn_in = \"5000\",   seed = \"2023\",   thread = \"8\" )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Sbayes-S with tidyGWAS structure — run_sbayess","text":"parent_folder filepath tidyGWAS::tidyGWAS() folder ... pass arguments slurm_header() write_script captured code written disk .sh file? pi argument passed sbayes hsq argument passed sbayes num_chains argument passed sbayes chain_length argument passed sbayes burn_in argument passed sbayes seed argument passed sbayes thread argument passed sbayes","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Sbayes-S with tidyGWAS structure — run_sbayess","text":"filepath character vector","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Sbayes-S with tidyGWAS structure — run_sbayess","text":"","code":"if (FALSE) { run_sbayess() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess_req.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if required files exist for Sbayes-S — run_sbayess_req","title":"Check if required files exist for Sbayes-S — run_sbayess_req","text":"Check required files exist Sbayes-S","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess_req.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if required files exist for Sbayes-S — run_sbayess_req","text":"","code":"run_sbayess_req()"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sbayess_req.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if required files exist for Sbayes-S — run_sbayess_req","text":"","code":"if (FALSE) { run_sbayess_req() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc.html","id":null,"dir":"Reference","previous_headings":"","what":"run Stratified LDscore regression on tidyGWAS formatted sumstats — run_sldsc","title":"run Stratified LDscore regression on tidyGWAS formatted sumstats — run_sldsc","text":"run Stratified LDscore regression tidyGWAS formatted sumstats","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run Stratified LDscore regression on tidyGWAS formatted sumstats — run_sldsc","text":"","code":"run_sldsc(   parent_folder,   ldscore = c(\"superclusters\", \"clusters\"),   write_script = c(\"no\", \"yes\") )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run Stratified LDscore regression on tidyGWAS formatted sumstats — run_sldsc","text":"parent_folder Folder sumstats cleaned tidyGWAS. see tidyGWAS::tidyGWAS() output_folder ldscore cell-type atlas use. match entry reference file write_script code written bash script?","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"run Stratified LDscore regression on tidyGWAS formatted sumstats — run_sldsc","text":"","code":"if (FALSE) { run_sldsc(\"path_to_tidyGWAS\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc_cts.html","id":null,"dir":"Reference","previous_headings":"","what":"Run stratified LDscore regression using the --h2-cts flag — run_sldsc_cts","title":"Run stratified LDscore regression using the --h2-cts flag — run_sldsc_cts","text":"Run stratified LDscore regression using --h2-cts flag","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc_cts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run stratified LDscore regression using the --h2-cts flag — run_sldsc_cts","text":"","code":"run_sldsc_cts(parent_folder, cts_file, write_script = TRUE, ..., out = NULL)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc_cts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run stratified LDscore regression using the --h2-cts flag — run_sldsc_cts","text":"parent_folder filepath tidyGWAS::tidyGWAS() folder cts_file filepath cts file write_script code written file? ... optional slurm argument filepath output directory. Defaults \"sldsc\" ldsc folder","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc_cts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run stratified LDscore regression using the --h2-cts flag — run_sldsc_cts","text":"character vector","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/run_sldsc_cts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run stratified LDscore regression using the --h2-cts flag — run_sldsc_cts","text":"","code":"if (FALSE) {   run_sldsc_cts(tempdir(), \"siletti2023.cts\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup required filepaths for downstreamGWAS — setup","title":"Setup required filepaths for downstreamGWAS — setup","text":"Setup required filepaths downstreamGWAS","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup required filepaths for downstreamGWAS — setup","text":"","code":"setup(   downstreamGWAS_folder,   container_dependency = \"\",   container_software = c(\"apptainer\", \"singularity\") )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup required filepaths for downstreamGWAS — setup","text":"downstreamGWAS_folder Local filepath downstreamGWAS data stored container_dependency need load singularity/apptainer HPC? example: \"ml apptainer\" container_software container software use? \"apptainer\" \"singularity\"","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup required filepaths for downstreamGWAS — setup","text":"","code":"if (FALSE) { setup() }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/slurm_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a slurm header — slurm_header","title":"Construct a slurm header — slurm_header","text":"Construct slurm header","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/slurm_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a slurm header — slurm_header","text":"","code":"slurm_header(   time = \"24:00:00\",   mem = \"8gb\",   output = NULL,   account = NULL,   partition = NULL,   cpus_per_task = NULL )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/slurm_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a slurm header — slurm_header","text":"time time allocated job mem memory allocated job (remember use 'gb' ending) output filepath output slurm log file account account partition partition cpus_per_task cpus per task","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/slurm_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a slurm header — slurm_header","text":"character vector slurm header","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/slurm_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a slurm header — slurm_header","text":"","code":"slurm_header() #> [1] \"#!/bin/bash\"             \"#SBATCH --mem=8gb\"       #> [3] \"#SBATCH --time=24:00:00\""},{"path":"http://arvidharder.com/downstreamGWAS/reference/tidyGWAS_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the folder structure and filepaths for downstreamGWAS directory — tidyGWAS_paths","title":"Create the folder structure and filepaths for downstreamGWAS directory — tidyGWAS_paths","text":"Create folder structure filepaths downstreamGWAS directory","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/tidyGWAS_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the folder structure and filepaths for downstreamGWAS directory — tidyGWAS_paths","text":"","code":"tidyGWAS_paths(dir)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/tidyGWAS_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the folder structure and filepaths for downstreamGWAS directory — tidyGWAS_paths","text":"dir filepath folder","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/tidyGWAS_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the folder structure and filepaths for downstreamGWAS directory — tidyGWAS_paths","text":"list filepaths","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/tidyGWAS_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the folder structure and filepaths for downstreamGWAS directory — tidyGWAS_paths","text":"","code":"if (FALSE) {  tidyGWAS_paths(\"gwas/height2022\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ldsc.html","id":null,"dir":"Reference","previous_headings":"","what":"Export tidyGWAS format to LDSC format — to_ldsc","title":"Export tidyGWAS format to LDSC format — to_ldsc","text":"Export tidyGWAS format LDSC format","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ldsc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export tidyGWAS format to LDSC format — to_ldsc","text":"","code":"to_ldsc(parent_folder, use_effective_n = TRUE)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ldsc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export tidyGWAS format to LDSC format — to_ldsc","text":"parent_folder filepath tidyGWAS folder sample_size attempt made calculate effective N use N?","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ldsc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export tidyGWAS format to LDSC format — to_ldsc","text":"","code":"if (FALSE) { to_ldsc(\"my_sumstats/tidygwas/height2022\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ma.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tidyGWAS to COJO .ma format — to_ma","title":"Convert tidyGWAS to COJO .ma format — to_ma","text":"Convert tidyGWAS COJO .ma format","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tidyGWAS to COJO .ma format — to_ma","text":"","code":"to_ma(parent_folder, out = NULL, use_effective_n = FALSE)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tidyGWAS to COJO .ma format — to_ma","text":"parent_folder filepath tidyGWAS folder output .ma file. Default value tidyGWAS_paths()[[\"ma_file]] use_effective_n N converted effective sample size? Requires CaseN ControlN column names","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_ma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tidyGWAS to COJO .ma format — to_ma","text":"","code":"if (FALSE) { to_ma(\"/path/tidyGWAS_sumstats/a_sumstat\") }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_plink_clumping.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tidyGWAS hivestyle partitioning to compatible format for plink clumping — to_plink_clumping","title":"Convert tidyGWAS hivestyle partitioning to compatible format for plink clumping — to_plink_clumping","text":"Convert tidyGWAS hivestyle partitioning compatible format plink clumping","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_plink_clumping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tidyGWAS hivestyle partitioning to compatible format for plink clumping — to_plink_clumping","text":"","code":"to_plink_clumping(parent_folder)"},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_plink_clumping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tidyGWAS hivestyle partitioning to compatible format for plink clumping — to_plink_clumping","text":"parent_folder filepath tidyGWAS folder","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_plink_clumping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tidyGWAS hivestyle partitioning to compatible format for plink clumping — to_plink_clumping","text":"writes file disk","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/to_plink_clumping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tidyGWAS hivestyle partitioning to compatible format for plink clumping — to_plink_clumping","text":"","code":"if (FALSE) { paths <- tidyGWAS_paths(\"/my_sumstat/cleaned/\") to_plink_clumping(paths) }"},{"path":"http://arvidharder.com/downstreamGWAS/reference/with_container.html","id":null,"dir":"Reference","previous_headings":"","what":"Run arbitrary code inside a container — with_container","title":"Run arbitrary code inside a container — with_container","text":"Run arbitrary code inside container","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/with_container.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run arbitrary code inside a container — with_container","text":"","code":"with_container(   code,   image,   workdir,   env = NULL,   setup_exists = FALSE,   R_code = FALSE )"},{"path":"http://arvidharder.com/downstreamGWAS/reference/with_container.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run arbitrary code inside a container — with_container","text":"code code executed inside container. image container used? Used index params.yml workdir filepath directory. used working directory inside container env pass environmental variables container, format: \"KEY=VALUE\" Currently supports passing one variable setup_exists logical. TRUE, workdir, reference_dir container_dependecy paths assumed exist. bind paths code load apptainer/singularity written script R_code Running R Code using format: R -e \"$code\" challening due escaping quotes special characters. TRUE, code run using R -e \"$code\"","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/with_container.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run arbitrary code inside a container — with_container","text":"character vector captured code","code":""},{"path":"http://arvidharder.com/downstreamGWAS/reference/with_container.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run arbitrary code inside a container — with_container","text":"","code":"with_container(  code = \"echo hello\",  image = \"R\",  workdir = tempdir()  ) #> Warning: cannot open file '/home/runner/.config/downstreamGWAS/config.yml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"}]
